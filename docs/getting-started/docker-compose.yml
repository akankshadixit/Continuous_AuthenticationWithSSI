version: '2'

services:
  indy_pool:
    build:
      context: ../../ci/
      dockerfile: indy-pool.dockerfile
      args:
        pool_ip: '10.0.0.2'
    image: indy_pool
    container_name: indy_pool
    working_dir: /home/indy
    ports:
      - "9701:9701"
      - "9702:9702"
      - "9703:9703"
      - "9704:9704"
      - "9705:9705"
      - "9706:9706"
      - "9707:9707"
      - "9708:9708"
    networks:
      pool_network:
        ipv4_address: 10.0.0.2
    volumes:
       - sandbox:/var/lib/indy/sandbox/
  steward_db:
    image: mongo:latest
    hostname: steward_db_host
    environment:
      - MONGO_INITDB_DATABASE=steward_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ./init_steward_db.js:/docker-entrypoint-initdb.d/init-db.js:ro
    ports:
    - 27017:27017
  steward:
    build:
      context: .
      dockerfile: steward.dockerfile
    command: flask run --host=0.0.0.0
    # command: jupyter notebook --ip=0.0.0.0
    image: steward
    container_name: steward
    working_dir: /home/indy
    volumes:
       - ./steward.py:/home/indy/steward.py
       - sandbox:/home/indy/sandbox
    environment:
      FLASK_APP: 'steward'
      FLASK_ENV: 'development'
      LC_ALL: 'C.UTF-8'
      LANG: 'C.UTF-8'
    ports:
      - "8887:8888"
      - "5001:5000"
    networks:
      - pool_network
    links:
      - indy_pool
      - steward_db
  # iot_device1:
  #   build:
  #     context: .
  #     dockerfile: iot_device1.dockerfile
  #   command: jupyter notebook --ip=0.0.0.0
  #   image: iot_device1
  #   container_name: iot_device1
  #   working_dir: /home/indy
  #   volumes:
  #      - ./iot_device1.ipynb:/home/indy/iot_device1.ipynb
  #      - sandbox:/home/indy/sandbox
  #   ports:
  #     - "8888:8888"
  #   networks:
  #     - pool_network
  #   links:
  #     - indy_pool
  # iot_device2:
  #   build:
  #     context: .
  #     dockerfile: iot_device2.dockerfile
  #   command: jupyter notebook --ip=0.0.0.0
  #   image: iot_device2
  #   container_name: iot_device2
  #   working_dir: /home/indy
  #   volumes:
  #      - ./iot_device2.ipynb:/home/indy/iot_device2.ipynb
  #      - sandbox:/home/indy/sandbox
  #   ports:
  #     - "8889:8888"
  #   networks:
  #     - pool_network
  #   links:
  #     - indy_pool
  # retailer:
  #   build:
  #     context: .
  #     dockerfile: retailer.dockerfile
  #   command: jupyter notebook --ip=0.0.0.0
  #   image: retailer
  #   container_name: retailer
  #   working_dir: /home/indy
  #   volumes:
  #      - ./retailer.ipynb:/home/indy/retailer.ipynb
  #      - sandbox:/home/indy/sandbox
  #   ports:
  #     - "8890:8888"
  #   networks:
  #     - pool_network
  #   links:
  #     - indy_pool
  # supplier:
  #   build:
  #     context: .
  #     dockerfile: supplier.dockerfile
  #   command: jupyter notebook --ip=0.0.0.0
  #   image: supplier
  #   container_name: supplier
  #   working_dir: /home/indy
  #   volumes:
  #      - ./supplier.ipynb:/home/indy/supplier.ipynb
  #      - sandbox:/home/indy/sandbox
  #   ports:
  #     - "8891:8888"
  #   networks:
  #     - pool_network
  #   links:
  #     - indy_pool
  # auditor:
    # build:
    #   context: .
    #   dockerfile: auditor.dockerfile
    # command: jupyter notebook --ip=0.0.0.0
    # image: auditor
    # container_name: auditor
    # working_dir: /home/indy
    # volumes:
    #    - ./auditor.ipynb:/home/indy/auditor.ipynb
    #    - sandbox:/home/indy/sandbox
    # ports:
    #   - "8892:8888"
    # networks:
    #   - pool_network
    # links:
    #   - indy_pool

networks:
  pool_network:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 10.0.0.0/24

volumes:
     sandbox:
